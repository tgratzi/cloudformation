{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Parameters" : {
    "VpcId" : {
      "Type" : "String"
    },
    "SubnetId" : {
      "Type" : "String"
    },
    "KeyName" : {
      "Description" : "Amazon EC2 Key Pair",
      "Type" : "AWS::EC2::KeyPair::KeyName"
    },
    "ImageId" : {
      "Description" : "Instance Image ID",
      "Default" : "ami-eec1c380",
      "Type" : "String"
    },
    "InstanceType" : {
      "Type" : "String",
      "Default" : "t2.micro",
      "AllowedValues" : ["t2.nano", "t2.micro", "m2.small"],
      "Description" : "Enter t2.nano, t2.micro or m2.small. Default is t2.micro."
    },
    "PrivateHostedZoneName" : {
      "Default" : "devops-book.local",
      "Description" : "Private Hosted Zone",
      "Type" : "String"
    }
    
  },

  "Resources": {
    "LbSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Enable all inbound LB access via port 80",
        "VpcId" : { "Ref" : "VpcId" },
        "SecurityGroupIngress": [{
          "IpProtocol" : "tcp",
          "CidrIp" : "0.0.0.0/0",
          "FromPort" : "80",
          "ToPort" : "80"
        }],
        "Tags" : [
            {"Key" : "Name", "Value" : "LB"}
        ]
      }
    },
    "WebSecurityyGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Enable internal Web access",
        "VpcId" : { "Ref" : "VpcId" },
        "SecurityGroupIngress": [{
          "IpProtocol" : "tcp",
          "FromPort" : "8080",
          "ToPort" : "8080",
          "SourceSecurityGroupId" : { "Ref" : "LbSecurityGroup" }
        }],
        "Tags" : [
            {"Key" : "Name", "Value" : "Web"}
        ]
      }
    },
    "SshSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Enable SSH access via port 22",
        "VpcId" : { "Ref" : "VpcId" },
        "SecurityGroupIngress": [{
          "IpProtocol" : "tcp",
          "CidrIp" : "0.0.0.0/0",
          "FromPort" : "22",
          "ToPort" : "22"
        }],
        "Tags" : [
            {"Key" : "Name", "Value" : "SSH"}
        ]
      }
    },
    "SshInnerSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Enable SSH access via CI server",
        "VpcId" : { "Ref" : "VpcId" },
        "SecurityGroupIngress": [{
          "IpProtocol" : "tcp",
          "FromPort" : "22",
          "ToPort" : "22",
          "SourceSecurityGroupId" : { "Ref" : "SshSecurityGroup" }
        }],
        "Tags" : [
            {"Key" : "Name", "Value" : "SSH_inner"}
        ]
      },
      "DependsOn" : "SshSecurityGroup"
    },
    "KibanaSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Enable Kibana access via port 5601",
        "VpcId" : { "Ref" : "VpcId" },
        "SecurityGroupIngress": [{
          "IpProtocol" : "tcp",
          "CidrIp" : "0.0.0.0/0",
          "FromPort" : "5601",
          "ToPort" : "5601"
        }],
        "Tags" : [
            {"Key" : "Name", "Value" : "Kibana"}
        ]
      }
    },
    "LogstashInnerSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Enable Elasticsearch access via port 9200",
        "VpcId" : { "Ref" : "VpcId" },
        "SecurityGroupIngress": [{
          "IpProtocol" : "tcp",
          "FromPort" : "9200",
          "ToPort" : "9200",
          "SourceSecurityGroupId" : { "Ref" : "WebSecurityyGroup" }
        }]
      },
      "DependsOn" : "WebSecurityyGroup"
    },
    "CiSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Enable Jenkins access via port 8080",
        "VpcId" : { "Ref" : "VpcId" },
        "SecurityGroupIngress": [{
          "IpProtocol" : "tcp",
          "CidrIp" : "0.0.0.0/0",
          "FromPort" : "8080",
          "ToPort" : "8080"
        }]
      }
    },
    "LbEip": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "InstanceId": { "Ref": "LbEc2Instance" }
      }
    },
    "KibanaEip": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "InstanceId": { "Ref": "KibanaEc2Instance" }
      }
    },
    "CiEip": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "InstanceId": { "Ref": "CiEc2Instance" }
      }
    },
    "LbEc2Instance" : {
      "Type" : "AWS::EC2::Instance",
      "Properties" : {
          "SubnetId" : { "Ref": "SubnetId" },
          "ImageId" : { "Ref": "ImageId" },
          "InstanceType" : { "Ref": "InstanceType" },
          "KeyName" : { "Ref": "KeyName" },
          "SecurityGroupIds" : [
            { "Ref" : "LbSecurityGroup" },
            { "Ref" : "SshInnerSecurityGroup" }
          ],
          "Tags" : [
              {"Key" : "Name", "Value" : "lb"},
              {"Key" : "ServerType", "Value" : "lb"}
          ],
          "UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
          "#! /bin/bash -v\n",
          "getenforce\n",
          "setenforce 0\n",
          "sed -i 's/SELINUX=.*/SELINUX=disabled/g' /etc/selinux/config\n",
          "echo '\n' >> /etc/ssh/sshd_config\n",
          "echo 'Port 22' >> /etc/ssh/sshd_config\n",
          "mkdir /home/centos/.ssh\n",
          "curl -s https://raw.githubusercontent.com/devops-book/cloudformation/master/authorized_keys >> /home/centos/.ssh/authorized_keys\n",
          "chmod 600 /home/centos/.ssh/authorized_keys\n",
          "chmod 700 /home/centos/.ssh\n",
          "chown centos:centos -R /home/centos/.ssh\n",
          "shutdown -r now\n"
          ]]}} 
      }
    },
    "Web1Ec2Instance" : {
      "Type" : "AWS::EC2::Instance",
      "Properties" : {
          "ImageId" : { "Ref": "ImageId" },
          "InstanceType" : { "Ref": "InstanceType" },
          "KeyName" : { "Ref": "KeyName" },
          "NetworkInterfaces": [{
            "AssociatePublicIpAddress" : "true",
            "DeleteOnTermination": "true",
            "GroupSet":[
              { "Ref" : "WebSecurityyGroup" },
              { "Ref" : "SshInnerSecurityGroup" }
            ],
            "SubnetId": { "Ref": "SubnetId" },
            "DeviceIndex": "0"
          }], 
          "Tags" : [
              {"Key" : "Name", "Value" : "web1"},
              {"Key" : "ServerType", "Value" : "web"}
          ],
          "UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
          "#! /bin/bash -v\n",
          "getenforce\n",
          "setenforce 0\n",
          "sed -i 's/SELINUX=.*/SELINUX=disabled/g' /etc/selinux/config\n",
          "echo '\n' >> /etc/ssh/sshd_config\n",
          "echo 'Port 22' >> /etc/ssh/sshd_config\n",
          "mkdir /home/centos/.ssh\n",
          "curl -s https://raw.githubusercontent.com/devops-book/cloudformation/master/authorized_keys >> /home/centos/.ssh/authorized_keys\n",
          "chmod 600 /home/centos/.ssh/authorized_keys\n",
          "chmod 700 /home/centos/.ssh\n",
          "chown centos:centos -R /home/centos/.ssh\n",
          "shutdown -r now\n"
          ]]}} 
      }
    },
    "Web2Ec2Instance" : {
      "Type" : "AWS::EC2::Instance",
      "Properties" : {
          "ImageId" : { "Ref": "ImageId" },
          "InstanceType" : { "Ref": "InstanceType" },
          "KeyName" : { "Ref": "KeyName" },
          "NetworkInterfaces": [{
            "AssociatePublicIpAddress" : "true",
            "DeleteOnTermination": "true",
            "GroupSet":[
              { "Ref" : "WebSecurityyGroup" },
              { "Ref" : "SshInnerSecurityGroup" }
            ],
            "SubnetId": { "Ref": "SubnetId" },
            "DeviceIndex": "0"
          }], 
          "Tags" : [
              {"Key" : "Name", "Value" : "web2"},
              {"Key" : "ServerType", "Value" : "web"}
          ],
          "UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
          "#! /bin/bash -v\n",
          "getenforce\n",
          "setenforce 0\n",
          "sed -i 's/SELINUX=.*/SELINUX=disabled/g' /etc/selinux/config\n",
          "echo '\n' >> /etc/ssh/sshd_config\n",
          "echo 'Port 22' >> /etc/ssh/sshd_config\n",
          "mkdir /home/centos/.ssh\n",
          "curl -s https://raw.githubusercontent.com/devops-book/cloudformation/master/authorized_keys >> /home/centos/.ssh/authorized_keys\n",
          "chmod 600 /home/centos/.ssh/authorized_keys\n",
          "chmod 700 /home/centos/.ssh\n",
          "chown centos:centos -R /home/centos/.ssh\n",
          "shutdown -r now\n"
          ]]}} 
      }
    },
    "KibanaEc2Instance" : {
      "Type" : "AWS::EC2::Instance",
      "Properties" : {
          "SubnetId" : { "Ref": "SubnetId" },
          "ImageId" : { "Ref": "ImageId" },
          "InstanceType" : { "Ref": "InstanceType" },
          "KeyName" : { "Ref": "KeyName" },
          "SecurityGroupIds" : [
            { "Ref" : "KibanaSecurityGroup" },
            { "Ref" : "LogstashInnerSecurityGroup" },
            { "Ref" : "SshInnerSecurityGroup" }
          ],
          "Tags" : [
              {"Key" : "Name", "Value" : "kibana"},
              {"Key" : "ServerType", "Value" : "kibana"}
          ],
          "UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
          "#! /bin/bash -v\n",
          "getenforce\n",
          "setenforce 0\n",
          "sed -i 's/SELINUX=.*/SELINUX=disabled/g' /etc/selinux/config\n",
          "echo '\n' >> /etc/ssh/sshd_config\n",
          "echo 'Port 22' >> /etc/ssh/sshd_config\n",
          "mkdir /home/centos/.ssh\n",
          "curl -s https://raw.githubusercontent.com/devops-book/cloudformation/master/authorized_keys >> /home/centos/.ssh/authorized_keys\n",
          "chmod 600 /home/centos/.ssh/authorized_keys\n",
          "chmod 700 /home/centos/.ssh\n",
          "chown centos:centos -R /home/centos/.ssh\n",
          "shutdown -r now\n"
          ]]}} 
      }
    },
    "CiEc2Instance" : {
      "Type" : "AWS::EC2::Instance",
      "Properties" : {
          "SubnetId" : { "Ref": "SubnetId" },
          "ImageId" : { "Ref": "ImageId" },
          "InstanceType" : { "Ref": "InstanceType" },
          "KeyName" : { "Ref": "KeyName" },
          "SecurityGroupIds" : [
            { "Ref" : "WebSecurityyGroup" },
            { "Ref" : "CiSecurityGroup" },
            { "Ref" : "SshSecurityGroup" }
          ],
          "Tags" : [
              {"Key" : "Name", "Value" : "ci"},
              {"Key" : "ServerType", "Value" : "ci"}
          ],
          "UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
          "#! /bin/bash -v\n",
          "getenforce\n",
          "setenforce 0\n",
          "sed -i 's/SELINUX=.*/SELINUX=disabled/g' /etc/selinux/config\n",
          "echo '\n' >> /etc/ssh/sshd_config\n",
          "echo 'Port 22' >> /etc/ssh/sshd_config\n",
          "yum clean all\n",
          "yum -y install epel-release wget java-1.8.0-openjdk-devel\n",
          "yum -y install ansible\n",
          "sed -i 's/.*host_key_checking.*/host_key_checking = False/g' /etc/ansible/ansible.cfg\n",
          "wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins.io/redhat/jenkins.repo\n",
          "rpm --import http://pkg.jenkins.io/redhat/jenkins.io.key\n",
          "yum -y install jenkins\n",
          "mkdir /home/centos/.ssh\n",
          "curl -s https://raw.githubusercontent.com/devops-book/cloudformation/master/id_rsa > /home/centos/.ssh/id_rsa\n",
          "curl -s https://raw.githubusercontent.com/devops-book/cloudformation/master/authorized_keys_local >> /home/centos/.ssh/authorized_keys\n",
          "chmod 400 /home/centos/.ssh/id_rsa\n",
          "chmod 600 /home/centos/.ssh/authorized_keys\n",
          "chmod 700 /home/centos/.ssh\n",
          "chown centos:centos -R /home/centos/.ssh\n",
          "mkdir /var/lib/jenkins/.ssh\n",
          "curl -s https://raw.githubusercontent.com/devops-book/cloudformation/master/id_rsa > /var/lib/jenkins/.ssh/id_rsa\n",
          "chmod 400 /var/lib/jenkins/.ssh/id_rsa\n",
          "curl -s https://raw.githubusercontent.com/devops-book/cloudformation/master/ssh_config > /var/lib/jenkins/.ssh/config\n",
          "chmod 400 /var/lib/jenkins/.ssh/config\n",
          "chmod 700 /var/lib/jenkins/.ssh\n",
          "chown jenkins:jenkins -R /var/lib/jenkins/.ssh\n",
          "shutdown -r now\n"
          ]]}} 
      }
    },
    "PrivateHostedZone" : {
      "Type" : "AWS::Route53::HostedZone",
      "Properties" : {
        "HostedZoneConfig" : { 
          "Comment" : "Private Hosted Zone"
        },
        "Name" : { "Ref" : "PrivateHostedZoneName" },
        "VPCs" : [{
           "VPCId" : { "Ref" : "VpcId" },
           "VPCRegion" : { "Ref" : "AWS::Region" }
        }]
      }
    },
    "LbLocalDNSRecord" : {
      "Type" : "AWS::Route53::RecordSet",
      "Properties" : {
        "HostedZoneName" : { "Fn::Join" : [ "", [ { "Ref" : "PrivateHostedZoneName" }, "." ]]},
        "Comment" : "A record for the private IP address of LB instance.",
        "Name" : { "Fn::Join" : [ "", [ "lb.", { "Ref" : "PrivateHostedZoneName" }, "." ]]},
        "Type" : "A",
        "TTL" : "60",
        "ResourceRecords" : [
          { "Fn::GetAtt" : [ "LbEc2Instance", "PrivateIp" ] }
        ]
      },
      "DependsOn" : "PrivateHostedZone"
    },
    "Web1LocalDNSRecord" : {
      "Type" : "AWS::Route53::RecordSet",
      "Properties" : {
        "HostedZoneName" : { "Fn::Join" : [ "", [ { "Ref" : "PrivateHostedZoneName" }, "." ]]},
        "Comment" : "A record for the private IP address of Web1 instance.",
        "Name" : { "Fn::Join" : [ "", [ "web1.", { "Ref" : "PrivateHostedZoneName" }, "." ]]},
        "Type" : "A",
        "TTL" : "60",
        "ResourceRecords" : [
          { "Fn::GetAtt" : [ "Web1Ec2Instance", "PrivateIp" ] }
        ]
      },
      "DependsOn" : "PrivateHostedZone"
    },
    "Web2LocalDNSRecord" : {
      "Type" : "AWS::Route53::RecordSet",
      "Properties" : {
        "HostedZoneName" : { "Fn::Join" : [ "", [ { "Ref" : "PrivateHostedZoneName" }, "." ]]},
        "Comment" : "A record for the private IP address of Web2 instance.",
        "Name" : { "Fn::Join" : [ "", [ "web2.", { "Ref" : "PrivateHostedZoneName" }, "." ]]},
        "Type" : "A",
        "TTL" : "60",
        "ResourceRecords" : [
          { "Fn::GetAtt" : [ "Web2Ec2Instance", "PrivateIp" ] }
        ]
      },
      "DependsOn" : "PrivateHostedZone"
    },
    "KibanaLocalDNSRecord" : {
      "Type" : "AWS::Route53::RecordSet",
      "Properties" : {
        "HostedZoneName" : { "Fn::Join" : [ "", [ { "Ref" : "PrivateHostedZoneName" }, "." ]]},
        "Comment" : "A record for the private IP address of Kibana instance.",
        "Name" : { "Fn::Join" : [ "", [ "kibana.", { "Ref" : "PrivateHostedZoneName" }, "." ]]},
        "Type" : "A",
        "TTL" : "60",
        "ResourceRecords" : [
          { "Fn::GetAtt" : [ "KibanaEc2Instance", "PrivateIp" ] }
        ]
      },
      "DependsOn" : "PrivateHostedZone"
    },
    "CiLocalDNSRecord" : {
      "Type" : "AWS::Route53::RecordSet",
      "Properties" : {
        "HostedZoneName" : { "Fn::Join" : [ "", [ { "Ref" : "PrivateHostedZoneName" }, "." ]]},
        "Comment" : "A record for the private IP address of CI instance.",
        "Name" : { "Fn::Join" : [ "", [ "ci.", { "Ref" : "PrivateHostedZoneName" }, "." ]]},
        "Type" : "A",
        "TTL" : "60",
        "ResourceRecords" : [
          { "Fn::GetAtt" : [ "CiEc2Instance", "PrivateIp" ] }
        ]
      },
      "DependsOn" : "PrivateHostedZone"
    }
  },
  "Outputs" : {
    "LbAccessIp" : {
      "Description" : "LB access IP address",
      "Value" : { "Ref" : "LbEip" }
    },
    "KibanaAccessIp" : {
      "Description" : "Kibana access IP address",
      "Value" : { "Ref" : "KibanaEip" }
    },
    "CiAccessIp" : {
      "Description" : "CI access IP address",
      "Value" : { "Ref" : "CiEip" }
    }
  }
}
